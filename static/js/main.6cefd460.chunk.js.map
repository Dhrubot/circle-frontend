{"version":3,"sources":["actions/userPosts.js","actions/currentUser.js","components/Logout.js","components/NavBar.js","components/Login.js","actions/loginForm.js","components/Signup.js","actions/signupForm.js","components/Home.js","components/NewPostForm.js","actions/newPostForm.js","components/CommentForm.js","actions/userFollowingsPosts.js","components/CommentList.js","components/UserPost.js","components/UserPosts.js","components/UserFollowingPost.js","App.js","reducers/loginFormData.js","reducers/signupFormData.js","reducers/newPostFormData.js","reducers/userPosts.js","store.js","reducers/currentUser.js","reducers/userFollowingsPosts.js","index.js"],"names":["getUserPosts","id","dispatch","fetch","BASE_URL","credentials","method","headers","then","res","json","posts","error","alert","type","payload","setUserPosts","catch","console","log","setCurrentUser","user","withRouter","connect","logout","history","push","Button","variant","size","onClick","state","currentUser","loggedIn","props","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","as","to","Image","width","src","roundedCircle","fluid","NavDropdown","title","username","toUpperCase","slice","alignRight","Item","Divider","loginFormData","updateLoginForm","formData","login","body","JSON","stringify","handleInputChange","event","target","name","value","updatedFormInfo","Container","Row","Col","md","Card","ImgOverlay","Form","onSubmit","preventDefault","Group","Label","Control","onChange","placeholder","password","signupFormData","updateSignupForm","signup","newUserCredentials","style","color","controlId","email","passwordConfirmation","userFollowingsPosts","userId","infoCard","Body","Title","Subtitle","Footer","fontSize","postCards","length","map","p","index","key","cursor","e","Header","author","location","Text","description","likes","comments","newPostFormData","updateNewPostForm","createNewPost","post","addNewPost","handleOnChange","commentorId","createNewComment","postId","commentData","post_id","commentor_id","comment","addNewComment","createNewUserComment","addNewUserComment","useState","setComment","InputGroup","Prepend","CommentList","ListGroup","commentor","UserPost","this","Accordion","createNewUserLike","eventKey","deletePost","React","Component","userPosts","likerId","likeData","liker_id","like","r","followers","followings","UserFollowingPost","find","parseInt","match","params","Jumbotron","createNewLike","liker","marginRight","App","getCurrentUser","prevProps","userFollowings","following","getUserFollowingsPosts","following_id","exact","path","render","component","Login","Signup","UserPosts","NewPostForm","setUserFollowingsPosts","initialState","reducer","combineReducers","action","concat","filter","findIndex","newArray","likedPost","i","newState","myPost","v","a","indexOf","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","store","createStore","applyMiddleware","thunk","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.6cefd460.chunk.js","sourcesContent":["import { resetNewPostForm } from './newPostForm'\nimport { BASE_URL } from './currentUser'\n\nexport const setUserPosts = posts => {\n    return {\n        type: 'SET_USER_POSTS',\n        payload: posts\n    }\n}\n\n\nexport const clearUserPosts = posts => {\n    return {\n        type: 'CLEAR_USER_POSTS',\n    }\n}\n\n\nexport const addNewPost = (post) => {\n    return {\n        type: 'ADD_NEW_POST',\n        payload: post\n    }\n}\n\nexport const addNewUserComment = comment => {\n    return {\n        type: 'ADD_NEW_USER_COMMENT',\n        payload: comment\n    }\n}\n\nexport const addNewUserLike = post => {\n    return {\n        type: 'ADD_NEW_USER_LIKE',\n        payload: post\n    }\n}\n\nexport const deletePostSignal = id => {\n    return {\n        type: \"DELETE_POST\",\n        payload: id\n    }\n}\n\nexport const getUserPosts = (id) => {\n    return dispatch => {\n        return fetch(`${BASE_URL}/users/${id}/posts`, {\n            credentials: 'include',\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        })\n            .then(res => res.json())\n            .then(posts => {\n                if (posts.error) {\n                    alert(posts.error)\n                } else {\n                    dispatch(setUserPosts(posts))\n                }\n            })\n            .catch(console.log)\n    }\n}\n\nexport const createNewPost = (formData, history) => {\n    return dispatch => {\n        return fetch(`${BASE_URL}/posts`, {\n            credentials: 'include',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(formData)\n        })\n            .then(res => res.json())\n            .then(post => {\n                if (post.error) {\n                    alert(post.error)\n                } else {\n                    dispatch(addNewPost(post))\n                    dispatch(resetNewPostForm())\n                    history.push(`/profile`)\n                }\n            })\n            .catch(console.log)\n    }\n}\n\nexport const deletePost = (postId, history) => {\n    return dispatch => {\n        return fetch(`${BASE_URL}/posts/${postId}`, {\n            credentials: \"include\",\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n            .then(r => r.json())\n            .then(post => {\n                if (post.error) {\n                    alert(post.error)\n                } else {\n                    dispatch(deletePostSignal(post.id))\n                    history.push('/profile')\n                }\n            })\n            .catch(console.log)\n\n    }\n\n}\n\nexport const createNewUserComment = (postId, commentorId, formData) => {\n    const commentData = {\n        post_id: postId,\n        commentor_id: commentorId,\n        body: formData\n    }\n    return dispatch => {\n        return fetch(`${BASE_URL}/posts/${postId}/comments`, {\n            credentials: 'include',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(commentData)\n        })\n            .then(res => res.json())\n            .then(comment => {\n                if (comment.error) {\n                    alert(comment.error)\n                } else {\n                    dispatch(addNewUserComment(comment))\n                }\n            })\n            .catch(console.log)\n    }\n}\n\n\nexport const createNewUserLike = (postId, likerId, history) => {\n    const likeData = {\n        post_id: postId,\n        liker_id: likerId\n    }\n    return dispatch => {\n        return fetch(`${BASE_URL}/posts/${postId}/likes`, {\n            credentials: 'include',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(likeData)\n        })\n            .then(res => res.json())\n            .then(like => {\n                if (like.error) {\n                    alert(like.error)\n                } else {\n                    dispatch(addNewUserLike(like))\n                    history.push(`/profile`)\n                }\n            })\n            .catch(console.log)\n    }\n}\n\n\n","import { resetSignupForm } from \"./signupForm\"\nimport { getUserPosts, clearUserPosts } from './userPosts'\n\nexport const BASE_URL = 'https://circle-dh.herokuapp.com/api/v1'\n\n\nexport const setCurrentUser = user => {\n    return {\n        type: 'SET_CURRENT_USER',\n        payload: user\n    }\n}\n\nexport const clearCurrentUser = () => {\n    return {\n        type: 'LOGOUT_CURRENT_USER'\n    }\n}\n\nexport const login = (credentials, history) => {\n    return dispatch => {\n        return fetch(`${BASE_URL}/login`, {\n            credentials: 'include',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(credentials)\n        })\n                    .then(res => res.json())\n                    .then(user => {\n                        if (user.error) {\n                            alert(user.error)\n                        } else {\n                            dispatch(setCurrentUser(user))\n                            dispatch(getUserPosts(user.id))\n                            history.push('/')\n                        }\n                    })\n                    .catch(console.log)\n    }\n}\n\nexport const signup = formData => {\n    const newUserCredentials = {\n        user: formData\n    }\n    return dispatch => {\n        return fetch(`${BASE_URL}/signup`, {\n            credentials: 'include',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(newUserCredentials)\n        })\n            .then(res => res.json())\n            .then(user => {\n                if (user.error) {\n                    alert(user.error)\n                } else {\n                    dispatch(setCurrentUser(user))\n                    dispatch(resetSignupForm())\n                }\n            })\n            .catch(console.log)\n    }\n}\n\nexport const logout = (history) => {\n    return dispatch => {\n        dispatch(clearCurrentUser())\n        dispatch(clearUserPosts())\n        history.push('/')\n        return fetch(`${BASE_URL}/logout`, {\n            credentials: 'include',\n            method: 'DELETE'\n        })\n        .then()\n    }\n}\n\nexport const getCurrentUser = () => {\n    return dispatch => {\n        return fetch(`${BASE_URL}/get_current_user`, {\n            credentials: 'include',\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        })\n                    .then(res => res.json())\n                    .then(user => {\n                        if (user.error) {\n                            console.log(user.error)\n                        } else {\n                            dispatch(setCurrentUser(user))\n                            dispatch(getUserPosts(user.id))\n                        }\n                    })\n                    .catch(console.log)\n    }\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { logout } from '../actions/currentUser'\nimport Button from 'react-bootstrap/Button'\nimport { withRouter } from \"react-router\"\n\nconst Logout = ({ logout, history }) => {\n\n    const handleOnCLick = () => {\n        logout(history)\n    }\n    return (\n\n        <Button variant='danger' size='sm' onClick={ handleOnCLick }>\n            Logout\n        </Button>\n    )\n}\n\n\n\nexport default withRouter(connect(null, { logout })(Logout))","import React from 'react'\nimport { connect } from 'react-redux'\nimport Logout from './Logout'\nimport { Link } from 'react-router-dom'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport Image from 'react-bootstrap/Image'\n\nconst NavBar = (props) => {\n\n    return (\n      <div>\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"transparent\" variant=\"light\">\n            <Navbar.Brand href=\"/circle-frontend\">Circle</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href='/circle-frontend'>Home</Nav.Link>\n                </Nav>\n                    {props.loggedIn ?\n                <Nav>   \n                        <Nav.Link as={ Link } to='/posts/new'>Create Post</Nav.Link>\n                        <Image width='40' src=\"https://picsum.photos/50/50\" roundedCircle fluid />  \n                        <NavDropdown title={props.currentUser ? `${props.currentUser.username[0].toUpperCase() + props.currentUser.username.slice(1)}` : ''} id=\"collasible-nav-dropdown\" alignRight>\n                        <NavDropdown.Item as={ Link } to='/posts/new'>Create Post</NavDropdown.Item>\n                        <NavDropdown.Item as={ Link } to='/profile'>Profile</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item><Logout /></NavDropdown.Item> \n                    </NavDropdown>\n                </Nav>\n                    :\n                <Nav>\n                    <Nav.Link href='/login'>Login</Nav.Link>\n                </Nav>\n                }\n            </Navbar.Collapse>\n        </Navbar>\n      </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentUser: state.currentUser,\n        loggedIn: !!state.currentUser\n    }\n}\n\n\nexport default connect(mapStateToProps)(NavBar)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateLoginForm } from '../actions/loginForm'\nimport { login } from '../actions/currentUser'\nimport { Link } from 'react-router-dom'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Image from 'react-bootstrap/Image'\nimport Card from 'react-bootstrap/Card'\n\nconst Login = ({ loginFormData, updateLoginForm, login, history }) => {\n\n    const handleInputChange = event => {\n        const {name, value} = event.target\n        const updatedFormInfo = {\n            ...loginFormData,\n            [name]: value\n        }\n        updateLoginForm(updatedFormInfo)\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        login(loginFormData, history)\n    }\n    return (\n        <div className='index'><br></br><br></br><br></br>\n            <Container className=\"container h-100 d-flex justify-content-center\">\n                <Row>\n                    <Col md={8}>\n                        <Card>\n                            <Card.ImgOverlay>\n                            <h2 className='text-primary'>Welcome to Circle!</h2>\n                            <h4 className='text-primary'>Social network built by you, for you.</h4>\n                            </Card.ImgOverlay>\n                        \n                            <Image src=\"https://img.rawpixel.com/s3fs-private/rawpixel_images/website_content/313-jir7052-chim.jpg?w=800&dpr=1&fit=default&crop=default&q=65&vib=3&con=3&usm=15&bg=F4F4F3&ixlib=js-2.2.1&s=6de8f3daea74222d9f93aa06f66e8de9\" className='rounded mx-auto pt-4' fluid/>\n                        </Card>\n                    </Col>\n\n                    <Col md={4}>\n                    <div className=\"panel panel-default box-shadow shadow-sm p-3 mb-5 bg-white rounded\">\n                            <div className=\"panel-heading text-center\">\n                                <span className=\"text-primary h4\">Log In Here</span>\n                            </div><br></br>\n                            <hr></hr>\n                            {/* {<!--.panel-heading-->} */}\n                            <div className=\"panel-body\">\n                                <Form onSubmit={handleSubmit}>\n                                    <Form.Group value={loginFormData.username}>\n                                        <Form.Label>Username</Form.Label>\n                                        <Form.Control name='username' onChange={handleInputChange} placeholder=\"Username\" />\n                                    </Form.Group>\n                                    <Form.Group value={loginFormData.password}>\n                                        <Form.Label>Password</Form.Label>\n                                        <Form.Control name='password' onChange={handleInputChange} type='password' placeholder=\"Password\" />\n                                    </Form.Group>\n                                    <Button variant=\"primary\" type=\"submit\">\n                                        Login\n                                    </Button>\n                                    <br></br>\n                                    <p> Don't have an account? <Link to='/signup'>Sign Up</Link></p>\n                                </Form>\n                            </div>\n                    </div>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        loginFormData: state.loginFormData\n    }\n}\n\n\nexport default connect(mapStateToProps, { updateLoginForm, login })(Login)","export const updateLoginForm = formData => {\n    return {\n        type: 'UPDATE_LOGIN_FORM',\n        payload: formData\n    }\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateSignupForm } from '../actions/signupForm'\nimport { signup } from '../actions/currentUser'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\nconst Signup = ({ signupFormData, updateSignupForm, signup }) => {\n\n    const handleInputChange = event => {\n        const { name, value } = event.target\n        const updatedFormInfo = {\n            ...signupFormData,\n            [name]: value\n        }\n        updateSignupForm(updatedFormInfo)\n    }\n\n    const handleSubmit = event => {\n        console.log('I am here')\n        event.preventDefault()\n        signup(signupFormData)\n    }\n    return (\n        <>\n            <Container>\n                <Row>\n                    <Col md={3}>\n\n                    </Col>\n                    <Col md={6} className='float-right'>\n                        <Form onSubmit={handleSubmit}>\n                            <legend style={{ color: '#008ae6'}}>Sign Up</legend>\n                            <hr></hr>\n                            <h6>It's free and always will be.</h6>\n                            <Form.Group controlId=\"formBasicUsername\" value={signupFormData.username}>\n                                <Form.Label>Username</Form.Label>\n                                <Form.Control name='username' onChange={handleInputChange} placeholder=\"Username\" />\n                            </Form.Group>\n                            <Form.Group value={signupFormData.email}>\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control name='email'onChange={handleInputChange} type=\"email\" placeholder=\"example@email.com\" />\n                            </Form.Group>\n                            <Form.Group value={signupFormData.password}>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control name='password' onChange={handleInputChange} type=\"password\" placeholder=\"Password\" />\n                            </Form.Group>\n                            <Form.Group value={signupFormData.passwordConfirmation}>\n                                <Form.Label>Password Confirmation</Form.Label>\n                                <Form.Control name='password_confirmation' onChange={handleInputChange} type=\"password\" placeholder=\"Confirm your password\" />\n                            </Form.Group>\n                            <Row>\n                                <br></br>\n                                <span className=\"help-block\">By clicking Create my account, you agree to our Terms and that you have read our Data Use Policy, including our Cookie Use.</span>\n                                <Button variant=\"success\" className='btn-block signup-btn' type=\"submit\">\n                                    Sign up\n                                </Button>\n                            </Row>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        signupFormData: state.signupFormData\n    }\n}\n\n\nexport default connect(mapStateToProps, { updateSignupForm, signup })(Signup)","export const updateSignupForm = formData => {\n    return {\n        type: 'UPDATE_SIGNUP_FORM',\n        payload: formData\n    }\n}\n\nexport const resetSignupForm = () => {\n    return {\n        type: 'CLEAR_SIGNUP_FORM'\n    }\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport Card from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Col'\nimport Col from 'react-bootstrap/Col'\nimport Image from 'react-bootstrap/Image'\n\nconst Home = ({ userFollowingsPosts, history, currentUser }) => {\n\n    const infoCard = \n            <Card>\n                <Card.Body>\n                    <Card.Title>@{currentUser.username}</Card.Title>\n                        <Card.Subtitle className=\" mb-2 text-muted\">{currentUser.email}</Card.Subtitle>\n                            <div className=\"py-4\"></div>\n                        <Card.Footer style={{ color: '#008ae6', fontSize: '12pt' }}>\n                            <h5>Welcome to <strong>Circle.</strong> </h5> <br></br>\n                            <h6>Updates from your friends.</h6><br></br>\n                        </Card.Footer>\n                        <Card.Footer>\n                            Have something you want to share?<br></br>\n                            Create a post and share it with <br></br>\n                            your friends.\n                        </Card.Footer>\n                </Card.Body>\n            </Card>\n\n    // Tried out a sorting function to sort the homepage posts by most likes\n    // const userFollowingPostSorted = userFollowingsPosts.sort((a, b) => (b.likes.length - a.likes.length))\n\n    const postCards = userFollowingsPosts.length > 0 ?\n        \n\n        userFollowingsPosts.map((p, index) => {\n\n            const handleOnClick = e => {\n                e.preventDefault()\n                history.push(`followings/posts/${p.id}`)\n            }\n\n\n            return (\n                <div key={index}>\n                    <a style={{ cursor: 'pointer' }} onClick={handleOnClick}>\n                        <Card>\n                            <Card.Header>\n                                <div className=\"d-flex justify-content-between align-items-center\">\n                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                        <div className=\"mr-2\">\n                                            <Image width=\"35\" src=\"https://picsum.photos/50/50\" roundedCircle />\n                                        </div>\n                                        <div className=\"ml-2\">\n                                            <div className=\"h5 m-0\">@{p.author.username[0].toUpperCase() + p.author.username.slice(1)}</div>\n                                            <div className=\"h7 text-muted\">{p.location}</div>\n                                        </div>\n                                    </div>\n                                </div>                                            \n                            </Card.Header>\n\n                            <Card.Body>\n                                <Card.Text> {p.description} </Card.Text>\n                            </Card.Body>\n\n                            <Card.Footer >\n                                <Card.Text style={{ color: '#008ae6'}}>\n                                {p.likes.length} Likes this&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;{p.comments.length} Comments\n                                </Card.Text>\n                            </Card.Footer>\n                        </Card>\n                    </a>\n                    <div className=\"py-4\"></div>\n                    </div>\n                )\n            }\n        )\n\n        : \n\n        <Card>\n            <Card.Header>\n                <Card.Title>You are not following any users Yet.</Card.Title>\n            </Card.Header>\n            <Card.Body>\n                Start finding and following other users that you know to your cirlce to see their shared content.\n            </Card.Body>\n        </Card>\n\n\n\n    return (\n        <div>\n            <Container fluid>\n                <Row className='row'>\n                    <Col md={4}>\n                        <div className=\"py-4\"></div>\n                        {infoCard}\n                    </Col>\n                    <Col md={8}>\n                        <div className=\"py-4\"></div>\n                        {postCards}\n                    </Col>\n                </Row>\n            </Container>\n\n        </div>)\n\n}\n\nconst mapStateToProps = ({ userFollowingsPosts, currentUser }) => {\n    const userId = currentUser.id\n    return {\n        userFollowingsPosts,\n        userId,\n        currentUser\n    }\n}\n\nexport default connect(mapStateToProps)(Home)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { updateNewPostForm } from '../actions/newPostForm'\nimport { createNewPost } from '../actions/userPosts'\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\n\n\nconst NewPostForm = ( { newPostFormData, updateNewPostForm, history, createNewPost } ) => {\n\n    const handleOnChange = (e) => {\n        const { name, value } = e.target\n        const updatedFormInfo = {\n            ...newPostFormData,\n            [name]: value\n        }\n\n        updateNewPostForm(updatedFormInfo)\n\n    }\n\n    const handleOnSubmit = e => {\n        e.preventDefault()\n        createNewPost(newPostFormData, history)\n    }\n\n    return (\n        <div className='newPostForm'>\n            <Container fluid>\n                <Row>\n                    <Col className=\"col-xs-4 col-xs-offset-4 p-4 m-2\">\n                <Card className=\"text-center p-4\">\n                    <Card.Header>Create a new post</Card.Header>\n                        <Card.Body>\n                        <Form onSubmit={ handleOnSubmit }>\n                            <Form.Group  value={newPostFormData.title}>\n                            <Card.Title><Form.Label>Title</Form.Label></Card.Title>\n                                <Form.Control name='title' onChange={ handleOnChange } placeholder=\"Title\" />\n                            </Form.Group>\n                            <Form.Group value={newPostFormData.location}>\n                                <Card.Title><Form.Label>Location</Form.Label></Card.Title>\n                                <Form.Control name='location' onChange={ handleOnChange } placeholder=\"Add current location\" />\n                            </Form.Group>\n                            <Form.Group value={newPostFormData.description}>\n                                <Card.Title><Form.Label>Description</Form.Label></Card.Title>\n                                <Form.Control as='textarea' name='description' onChange={ handleOnChange } placeholder=\"Add descripton\" />\n                            </Form.Group>\n                            <Button variant=\"primary\" type=\"submit\">\n                                New Post\n                            </Button>\n                        </Form>\n                        </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n                \n            </Container>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ newPostFormData }) => {\n    return {\n        newPostFormData\n    }\n}\nexport default connect(mapStateToProps, { updateNewPostForm, createNewPost })(NewPostForm)","export const updateNewPostForm = formData => {\n    return {\n        type: 'UPDATE_NEW_POST_FORM',\n        payload: formData\n    }\n}\n\nexport const resetNewPostForm = () => {\n    return {\n        type: 'RESET_NEW_POST_FORM'\n    }\n}\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { createNewComment } from '../actions/userFollowingsPosts'\nimport { createNewUserComment } from '../actions/userPosts'\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\n\nconst CommentForm = ({ post, commentorId, createNewComment, createNewUserComment }) => {\n    const [comment, setComment] = useState('')\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        post.author.id === commentorId ? createNewUserComment(post.id, commentorId, comment) : createNewComment(post.id, commentorId, comment)\n        setComment('')\n    }\n\n    return (\n        <Form>\n            <Form.Row className=\"align-items-center\">\n                <InputGroup>\n                <Form.Control value={comment} as=\"textarea\" placeholder=\"Add a comment...\" onChange={e => setComment(e.target.value)}/>\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>\n                            <Button size='sm' type=\"submit\" onClick={handleSubmit}>\n                                Post\n                            </Button>\n                        </InputGroup.Text>\n                    </InputGroup.Prepend>\n                </InputGroup>\n            </Form.Row>\n        </Form>\n    )\n}\n\nconst mapStateToProps = state => {\n    const commentorId = state.currentUser ? state.currentUser.id : ''\n    return {\n        commentorId\n    }\n}\n\nexport default connect(mapStateToProps, { createNewComment, createNewUserComment })(CommentForm)","import { BASE_URL } from './currentUser'\n\nexport const setUserFollowingsPosts = posts => {\n    return {\n        type: 'SET_USER_FOLLOWINGS_POST',\n        payload: posts\n    }\n}\n\nexport const addNewLike = post => {\n    return {\n        type: 'ADD_NEW_LIKE',\n        payload: post\n    }\n}\n\nexport const addNewComment = comment => {\n    return {\n        type: 'ADD_NEW_COMMENT',\n        payload: comment\n    }\n}\n\nexport const getUserFollowingsPosts = (id) => {\n    return dispatch => {\n        return fetch(`${BASE_URL}/users/${id}/posts`, {\n            credentials: 'include',\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n        })\n            .then(res => res.json())\n            .then(posts => {\n                if (posts.error) {\n                    alert(posts.error)\n                } else {\n                    dispatch(setUserFollowingsPosts(posts))\n                }\n            })\n            .catch(console.log)\n    }\n}\n\n\nexport const createNewLike = (postId, likerId, history) => {\n    const likeData = {\n        post_id: postId,\n        liker_id: likerId\n    }\n    return dispatch => {\n        return fetch(`${BASE_URL}/posts/${postId}/likes`, {\n            credentials: 'include',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(likeData)\n        })\n            .then(res => res.json())\n            .then(like => {\n                if (like.error) {\n                    alert(like.error)\n                } else {\n                    dispatch(addNewLike(like))\n                    history.push(`/followings/posts/${like.post_id}`)\n                }\n            })\n            .catch(console.log)\n    }\n}\n\nexport const createNewComment = (postId, commentorId, formData) => {\n    console.log('from followings posts comment action')\n    const commentData = {\n        post_id: postId,\n        commentor_id: commentorId,\n        body: formData\n    }\n    return dispatch => {\n        return fetch(`${BASE_URL}/posts/${postId}/comments`, {\n            credentials: 'include',\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(commentData)\n        })\n            .then(res => res.json())\n            .then(comment => {\n                if (comment.error) {\n                    alert(comment.error)\n                } else {\n                    dispatch(addNewComment(comment))\n                }\n            })\n            .catch(console.log)\n    }\n}","import React from 'react'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport CommentForm from './CommentForm'\n\n\nconst CommentList = ({ post }) => {\n\n\n    return (\n        <div>\n            <hr></hr>\n            <ListGroup variant=\"flush\" className='comment-list-group'>\n            {post && post.comments.map(comment => (\n                <div key={comment.id}>\n                    <ListGroup.Item><strong>{comment.commentor.username[0].toUpperCase() + comment.commentor.username.slice(1)}  </strong> {comment.body}</ListGroup.Item>\n                </div>\n            )\n            )}\n\n            </ListGroup>\n            <hr></hr>\n            <CommentForm post={post}/>\n        </div>\n    )\n}\n\nexport default (CommentList)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { deletePost } from '../actions/userPosts'\nimport { createNewUserLike } from '../actions/userPosts'\nimport CommentList from './CommentList'\nimport Accordion from 'react-bootstrap/Accordion'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\n\nclass UserPost extends React.Component {\n\n\n    render () { \n\n        const p = this.props.post\n\n        \n        return (\n\n            <div key={p.id}>\n                <div className=\"py-4\"></div>\n                <Card>\n                    <Card.Header>\n                        <div className=\"d-flex justify-content-center align-items-center\">\n                            <Card.Title>{p.title}</Card.Title>\n                        </div>\n                    </Card.Header>\n                    <Card.Body>\n                        <Card.Text> {p.description} </Card.Text>\n                    </Card.Body>\n\n                    <Card.Footer>\n                        <Accordion>\n                            <Card.Body className='text-left text-muted'>\n                                <Button variant=\"outline-primary\" size=\"sm\" onClick={() => {\n                                    this.props.createNewUserLike(p.id, p.author.id, this.props.history)\n                                }}>\n                                    {p.likes.length} likes\n                                            </Button>\n\n\n\n                                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\" className=\"pull-right text-muted\">\n                                    {p.comments.length} Comments\n                                            </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"1\">\n                                    <CommentList post={p} />\n                                </Accordion.Collapse>\n                            </Card.Body>\n                        </Accordion>\n                    </Card.Footer>\n                </Card>\n                <Button size='sm' variant='danger' onClick={() => {\n                    this.props.deletePost(p.id, this.props.history)\n                    this.props.history.push('/profile')}}>\n                    Delete Post\n                </Button>\n            </div>\n\n            \n\n        )\n    }\n\n}\n\n\nconst mapStateToProps = ( { currentUser, userPosts } ) => {\n    return {\n        currentUser,\n        userPosts\n    }\n}\n\nexport default connect(mapStateToProps, { createNewUserLike, deletePost })(UserPost)","/* eslint-disable jsx-a11y/anchor-is-valid */\n\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport Card from 'react-bootstrap/Card'\nimport Image from 'react-bootstrap/Image'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport UserPost from './UserPost'\n\n\nconst UserPosts = ( {userPosts, user, history} ) => {\n\n    const postCards = userPosts.length > 0 ?\n        userPosts.map(p => {\n\n           return (\n               <div key={p.id}>\n                <UserPost post={p} history={history}/>\n               </div>\n                )\n            }\n        )\n        :\n        <Card>\n            <Card.Header>\n                <Card.Title>You haven't posted anything yet.</Card.Title>\n            </Card.Header>\n            <Card.Body>\n                Create you first post and share it with your circle.\n            </Card.Body>\n        </Card>\n\n    return (\n        <Container>\n            <Row>           \n                <Col md={4}>\n                    <div className=\"py-4\"></div>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title>\n                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                        <div className=\"d-flex justify-content-between align-items-center\">\n                                            <div className=\"mr-2\">\n                                                <Image width=\"100\" src=\"https://picsum.photos/50/50\" roundedCircle />\n                                            </div>\n                                            <div className=\"ml-2\">\n                                                <div className=\"h5 m-0\">@{user ? user.username[0].toUpperCase() + user.username.slice(1) : ''}</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Card.Title>\n                            </Card.Header>\n                            <Card.Body>\n                                <Card.Text as='div'>\n                                    <h6 className=\"text-muted\">{user.email}</h6>\n                                </Card.Text>\n                            </Card.Body>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                    <div className=\"h6 text-muted\">\n                                        Followers\n                                    </div>\n                                    <div className=\"h5\">\n                                        {user ? user.followers.length : ''}\n                                    </div>\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <div className=\"h6 text-muted\">\n                                        Following\n                                    </div>\n                                    <div className=\"h5\">\n                                        {user ? user.followings.length : ''}\n                                    </div>\n                                </ListGroup.Item>\n                            </ListGroup>\n                    </Card>\n                </Col>\n                <Col md={8}>\n                    <div className=\"py-4\"></div>\n                    {postCards}\n                </Col>\n            </Row>\n        </Container>\n    )\n\n}\n\nconst mapStateToProps = ( {userPosts, currentUser} ) => {\n    const user = currentUser ? currentUser : ''\n    return {\n        userPosts,\n        user\n    }\n}\n\nexport default connect(mapStateToProps)(UserPosts)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createNewLike } from '../actions/userFollowingsPosts'\nimport CommentList from './CommentList'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nclass UserFollowingPost extends React.Component {\n    render() {\n\n        let post = this.props.userFollowingsPosts.length > 0 && this.props.userFollowingsPosts.find(post => post.id === parseInt(this.props.match.params.id))\n\n        return (\n            post &&\n            <div className='jumbotron vertical-center'>\n                <Jumbotron fluid>\n                    <Container >\n                        <Row>\n                            <Col>\n                            <h2>{post && post.title}</h2>\n                            <h4>@{post.author.username[0].toUpperCase() + post.author.username.slice(1)}</h4>\n                            <h4 className=\"mb-2 text-muted\"> {post && post.location} </h4>\n                            <p>{post && post.description}</p>\n                            <p>\n                                <Button variant=\"outline-primary\" size=\"sm\" onClick={() => {\n                                    this.props.createNewLike(post.id, this.props.userId, this.props.history)\n                                }}>\n                                    {post.likes.find(like => like.liker.id === this.props.userId) ? 'Liked' : 'Like'}\n                                </Button>\n                            </p>\n                            <strong style={{ marginRight: '5px' }}>{post && post.likes.length}</strong>Likes\n                            </Col>\n                            <Col>\n                                <h4>Comments</h4>\n                                <CommentList post={post}/>\n                            </Col>\n                        </Row>\n                    </Container>\n                </Jumbotron>\n            </div>\n        )\n    }\n\n}\n\n\nconst mapStateToProps = ({ userFollowingsPosts, currentUser }) => {\n    const userId = currentUser ? currentUser.id : ''\n    return {\n        userFollowingsPosts,\n        userId\n    }\n}\n\nexport default connect(mapStateToProps, { createNewLike })(UserFollowingPost)","import React from 'react';\nimport { connect } from 'react-redux'\nimport { getCurrentUser } from './actions/currentUser'\nimport { getUserFollowingsPosts } from './actions/userFollowingsPosts'\nimport NavBar from './components/NavBar'\nimport { Route, Switch } from 'react-router-dom'\nimport Login from './components/Login'\nimport Signup from './components/Signup'\nimport Home from './components/Home'\nimport NewPostForm from './components/NewPostForm'\nimport UserPosts from './components/UserPosts';\nimport UserPost from './components/UserPost';\nimport UserFollowingPost from './components/UserFollowingPost';\nimport { Container } from 'react-bootstrap'\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.getCurrentUser()\n  }\n\n  componentDidUpdate(prevProps) {\n    this.props.userFollowings && !prevProps.userFollowings && this.props.userFollowings.map( following => this.props.getUserFollowingsPosts(following.following_id))\n  }\n\n\n  \n  render() {\n    const  { loggedIn } = this.props\n    return ( \n      <Container fluid>\n      <div>\n          <NavBar />\n          <Switch>\n            <Route exact path='/circle-frontend' render={(props) => loggedIn ? <Home {...props}/> : <Login />} />\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/signup' component={Signup} />\n            <Route exact path='/profile' component={UserPosts} />\n            <Route exact path='/posts/new' component={NewPostForm} />\n            <Route exact path='/posts/:id' render={(props) =>\n              <UserPost {...props}/>\n            }/>\n            <Route exact path='/followings/posts/:id' render={(props) => \n              <UserFollowingPost {...props}/>\n            } />\n          </Switch>\n      </div>\n      </Container>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const userFollowings = state.currentUser ? state.currentUser.followings : ''\n  return ({\n    loggedIn: !!state.currentUser,\n    currentUser: state.currentUser,\n    userFollowings: userFollowings\n  })\n}\n\n\n\nexport default connect(mapStateToProps, { getCurrentUser, getUserFollowingsPosts })(App);\n","const initialState = {\n    username: '',\n    password: ''\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'UPDATE_LOGIN_FORM':\n            return action.payload\n        default:\n            return state\n    }\n}","const initialState = {\n    username: '',\n    email: '',\n    password: '',\n    passwordConfirmation: ''\n}\n\n\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'UPDATE_SIGNUP_FORM':\n            return action.payload\n        case 'CLEAR_SIGNUP_FORM':\n            return initialState\n        default:\n            return state\n    }\n}","const initialState = {\n    title: '',\n    location: '',\n    description: '',\n}\n\n\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'UPDATE_NEW_POST_FORM':\n            return action.payload\n        case 'RESET_NEW_POST_FORM':\n            return initialState\n        default:\n            return state\n    }\n}","const initialState = []\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET_USER_POSTS':\n            return action.payload\n        case 'CLEAR_USER_POSTS':\n            return initialState\n        case 'ADD_NEW_POST':\n            return state.concat(action.payload)\n        case 'DELETE_POST':\n            return state.filter(post => post.id !== action.payload)\n\n        case 'ADD_NEW_USER_LIKE':\n            let index = state.findIndex(post => post.id === action.payload.post_id)\n            const newArray = [...state]\n            let likedPost = newArray[index]\n            likedPost.likes = likedPost.likes.concat(action.payload)\n            newArray[index] = likedPost\n            return newArray\n\n        case 'ADD_NEW_USER_COMMENT':\n            let i = state.findIndex(post => post.id === action.payload.post_id)\n            const newState = [...state]\n            let myPost = newState[i]\n            myPost.comments = myPost.comments.concat(action.payload)\n            newState[i] = myPost\n            return newState\n        default:\n            return state\n    }\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport currentUser from './reducers/currentUser'\nimport loginFormData from './reducers/loginFormData'\nimport signupFormData from './reducers/signupFormData'\nimport newPostFormData from './reducers/newPostFormData'\nimport userPosts from './reducers/userPosts'\nimport userFollowingsPosts from './reducers/userFollowingsPosts'\n\nconst reducer = combineReducers({\n    currentUser,\n    userPosts,\n    userFollowingsPosts,\n    loginFormData,\n    signupFormData,\n    newPostFormData\n})\n\nconst composeEnhancers = (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ trace: true, traceLimit: 25 })) || compose;\n\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)))\n\nexport default store","export default (state = null, action) => {\n    switch (action.type) {\n        case 'SET_CURRENT_USER':\n            return action.payload\n        case 'LOGOUT_CURRENT_USER':\n            return null\n        default:\n            return state\n    }\n}","export default (state = [], action) => {\n    switch (action.type) {\n        case 'SET_USER_FOLLOWINGS_POST':\n            return state.concat(...state, action.payload).filter((v, i, a) => a.indexOf(v) === i)\n\n        case 'ADD_NEW_LIKE':\n            let index = state.findIndex(post => post.id === action.payload.post_id)\n            const newArray = [...state]\n            let likedPost =  newArray[index]\n            likedPost.likes = likedPost.likes.concat(action.payload)\n            newArray[index] = likedPost\n            return newArray\n            \n        case 'ADD_NEW_COMMENT':\n            let i = state.findIndex(post => post.id === action.payload.post_id)\n            const newState = [...state]\n            let myPost = newState[i]\n            myPost.comments = myPost.comments.concat(action.payload)\n            newState[i] = myPost\n            return newState\n\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport store from './store'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router basename='/circle-frontend'>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}